name: Create Multi-Platform Release

on:
  push:
    tags:
      - 'v*'  # Activar el workflow solo en tags que comiencen con "v"

permissions:
  contents: write  # Grant write permissions to contents

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Windows executable with PyInstaller
      run: |
        pyinstaller run_game.spec

    - name: Rename Executable
      run: move dist\run_game.exe dist\heroesvsmonsters-windows.exe  # Cambia el nombre para el release

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Install dependencies
      run: |
        npm install -g conventional-changelog-cli

    - name: Generate Changelog
      run: |
        conventional-changelog -p angular -i CHANGELOG.md -s

    - name: Commit and Push changes
      run: |
        git config --local user.name "github-actions"
        git config --local user.email "github-actions@github.com"
        git add CHANGELOG.md
        git commit -m "chore: update CHANGELOG.md for ${{ github.ref }}"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: heroesvsmonsters-windows.exe
        path: dist\heroesvsmonsters-windows.exe

    - name: Upload release notes
      uses: actions/upload-artifact@v4
      with:
        name: release_notes
        path: CHANGELOG.md

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Linux executable with PyInstaller
      run: |
        pyinstaller run_game.spec

    - name: Rename Executable
      run: mv dist/run_game dist/heroesvsmonsters-linux  # Cambia el nombre para el release

    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: heroesvsmonsters-linux
        path: dist/heroesvsmonsters-linux

  build-macos:
    runs-on: macos-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build macOS executable with PyInstaller
      run: |
        pyinstaller run_game.spec

    - name: Rename Executable
      run: mv dist/run_game dist/heroesvsmonsters-macos

    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: heroesvsmonsters-macos
        path: dist/heroesvsmonsters-macos

  release:
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest

    steps:

    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Download artifacts Windows
      uses: actions/download-artifact@v4
      with:
        name: heroesvsmonsters-windows.exe
        path: .

    - name: Download artifacts Linux
      uses: actions/download-artifact@v4
      with:
        name: heroesvsmonsters-linux
        path: .

    - name: Download artifacts macOS
      uses: actions/download-artifact@v4
      with:
        name: heroesvsmonsters-macos
        path: .

    - name: Download release notes
      uses: actions/download-artifact@v4
      with:
        name: release_notes
        path: .


    - name: Install GitHub CLI
      run: |
        sudo apt update
        sudo apt install -y gh

    - name: Create GitHub Release with GitHub CLI
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ github.ref_name }} \
          ./heroesvsmonsters-windows.exe \
          ./heroesvsmonsters-linux \
          ./heroesvsmonsters-macos \
          --title "Release ${{ github.ref_name }}" \
          --notes-file CHANGELOG.md
