name: Qodana Code Quality and Coverage

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'releases/*' # Solo ejecuta el workflow en ramas de release

jobs:
  qodana:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.head_commit.id }}  # Para asegurar que se obtiene el último commit de la rama
          fetch-depth: 0  # Se requiere un historial completo para análisis

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Create coverage directory
        run: |
          mkdir -p PYTHON/py/.qodana/code-coverage
          mkdir -p PYTHON/py/assets
          cp -r assets/* PYTHON/py/assets/

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov coverage pygame
        working-directory: PYTHON/py

      - name: Run tests with coverage
        run: |
          export PYTHONPATH="${PYTHONPATH}:/home/runner/work/hero-monsters-pygame/hero-monsters-pygame:/home/runner/work/hero-monsters-pygame/hero-monsters-pygame/src"
          coverage run -m pytest ../../tests -W ignore::DeprecationWarning
          coverage xml -i -o .qodana/code-coverage/coverage.xml
        working-directory: PYTHON/py

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: PYTHON/py/.qodana/code-coverage/coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: pytest
          name: code-coverage-report
          fail_ci_if_error: true

      - name: Qodana Scan
        uses: JetBrains/qodana-action@v2024.2
        with:
          args: "--linter,jetbrains/qodana-python:2024.2,--coverage-dir=PYTHON/py/.qodana/code-coverage --apply-fixes"
          pr-mode: false
          use-caches: false
          push-fixes: pull-request
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN_845925216 }}
          QODANA_ENDPOINT: 'https://qodana.cloud'
